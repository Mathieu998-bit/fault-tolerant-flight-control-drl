{
    "learning_rate": {
        ":type:": "<class 'function'>",
        ":serialized:": "gASVYgMAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX2ZpbGxfZnVuY3Rpb26Uk5QoaACMD19tYWtlX3NrZWxfZnVuY5STlGgAjA1fYnVpbHRpbl90eXBllJOUjAhDb2RlVHlwZZSFlFKUKEsBSwBLAUsCSxNDJHwAZAFrAHIUfACIABQAZAIXAFMAfACIARQAZAMXAFMAZARTAJQojHoKICAgICAgICBQcm9ncmVzcyB3aWxsIGRlY3JlYXNlIGZyb20gMSAoYmVnaW5uaW5nKSB0byAwCiAgICAgICAgOnBhcmFtIHByb2dyZXNzOiAoZmxvYXQpCiAgICAgICAgOnJldHVybjogKGZsb2F0KQogICAgICAgIJRHP+AAAAAAAABLAEc/Gjbi6xxDLU50lCmMCHByb2dyZXNzlIWUjJAvVXNlcnMva2RhbGx5L09uZURyaXZlIC0gRGVsZnQgVW5pdmVyc2l0eSBvZiBUZWNobm9sb2d5L1RVL01TYyBUaGVzaXMvRFJMLWNlc3NuYS1jaXRhdGlvbi1mYy9mYXVsdF90b2xlcmFudF9mbGlnaHRfY29udHJvbF9kcmwvdG9vbHMvc2NoZWR1bGUucHmUjARmdW5jlEssQwYABggBDAKUjA1pbml0aWFsX3ZhbHVllIwMc2Vjb25kX3ZhbHVllIaUKXSUUpRLAn2UKIwLX19wYWNrYWdlX1+UjCdmYXVsdF90b2xlcmFudF9mbGlnaHRfY29udHJvbF9kcmwudG9vbHOUjAhfX25hbWVfX5SMMGZhdWx0X3RvbGVyYW50X2ZsaWdodF9jb250cm9sX2RybC50b29scy5zY2hlZHVsZZSMCF9fZmlsZV9flGgPdYeUUpR9lCiMB2dsb2JhbHOUfZSMCGRlZmF1bHRzlE6MBGRpY3SUfZSMDmNsb3N1cmVfdmFsdWVzlF2UKEc/Ojbi6xxDLUc/Kjbi6xxDLWWMBm1vZHVsZZRoG4wEbmFtZZRoEIwDZG9jlGgLjBdfY2xvdWRwaWNrbGVfc3VibW9kdWxlc5RdlIwLYW5ub3RhdGlvbnOUfZSMCHF1YWxuYW1llIwbc2NoZWR1bGVfa2luay48bG9jYWxzPi5mdW5jlIwKa3dkZWZhdWx0c5ROdXRSLg=="
    },
    "buffer_size": 50000,
    "learning_starts": 100,
    "train_freq": 1,
    "batch_size": 256,
    "tau": 0.005,
    "ent_coef": "auto",
    "target_entropy": {
        ":type:": "<class 'numpy.float32'>",
        ":serialized:": "gASVZwAAAAAAAACMFW51bXB5LmNvcmUubXVsdGlhcnJheZSMBnNjYWxhcpSTlIwFbnVtcHmUjAVkdHlwZZSTlIwCZjSUSwBLAYeUUpQoSwOMATyUTk5OSv////9K/////0sAdJRiQwQAAEDAlIaUUpQu"
    },
    "gamma": 0.99,
    "observation_space": {
        ":type:": "<class 'gym.spaces.box.Box'>",
        ":serialized:": "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",
        "dtype": "float64",
        "shape": [
            10
        ],
        "low": "[-100. -100. -100. -100. -100. -100. -100. -100. -100. -100.]",
        "high": "[100. 100. 100. 100. 100. 100. 100. 100. 100. 100.]",
        "bounded_below": "[ True  True  True  True  True  True  True  True  True  True]",
        "bounded_above": "[ True  True  True  True  True  True  True  True  True  True]",
        "np_random": "RandomState(MT19937)"
    },
    "action_space": {
        ":type:": "<class 'gym.spaces.box.Box'>",
        ":serialized:": "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",
        "dtype": "float64",
        "shape": [
            3
        ],
        "low": "[-1. -1. -1.]",
        "high": "[1. 1. 1.]",
        "bounded_below": "[ True  True  True]",
        "bounded_above": "[ True  True  True]",
        "np_random": "RandomState(MT19937)"
    },
    "policy": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gASVQgAAAAAAAACMLmZhdWx0X3RvbGVyYW50X2ZsaWdodF9jb250cm9sX2RybC5hZ2VudC5wb2xpY3mUjAtMbk1scFBvbGljeZSTlC4=",
        "__module__": "fault_tolerant_flight_control_drl.agent.policy",
        "__doc__": "\n    Policy object that implements a SAC-like actor critic\n\n    :param sess: (TensorFlow session) The current TensorFlow session\n    :param ob_space: (Gym Space) The observation space of the environment\n    :param ac_space: (Gym Space) The action space of the environment\n    :param n_steps: (int) The number of steps to run for each environment\n    :param n_batch: (int) The number of batch to run (n_steps)\n    :param reuse: (bool) If the policy is reusable or not\n    :param scale: (bool) whether or not to scale the input\n    ",
        "recurrent": false,
        "__init__": "<function LnMlpPolicy.__init__ at 0x7ff5010a59e0>",
        "make_actor": "<function LnMlpPolicy.make_actor at 0x7ff5010a5950>",
        "make_critics": "<function LnMlpPolicy.make_critics at 0x7ff5010a5b00>",
        "step": "<function LnMlpPolicy.step at 0x7ff5010a5b90>",
        "__dict__": "<attribute '__dict__' of 'LnMlpPolicy' objects>",
        "__weakref__": "<attribute '__weakref__' of 'LnMlpPolicy' objects>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc_data object at 0x7ff51a68a150>"
    },
    "seed": null,
    "action_noise": null,
    "random_exploration": 0.0,
    "policy_kwargs": {}
}